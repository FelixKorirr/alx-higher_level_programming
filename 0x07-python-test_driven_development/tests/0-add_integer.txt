# 0-add_integer.txt

===========================
Add two integers
===========================

This module defines the addition function ``add_integer(a, b=98)``.

How to use
=====

``add_integer(...)``` returns the sum of its arguments

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(5, 3)
    8

::

    >>> add_integer(6, -7)
    -1

Works with floating-point values

::

    >>> add_integer(2.0, 5.0)
    7

floating points are casted to int before sum is done

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.7, -0.2)
    -2

Floating and non-floating point values can be combined

::

    >>> add_integer(3.3, -4)
    -1

Second argument is set to 98 by default

::

    >>> add_integer(2)
    100

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("korir", 4)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(6, "korir")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(5.4, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both args are non-integers and non-floats, TypeError message is
printed for the first arg

::

    >>> add_integer("hello", "korir")
    Traceback (most recent call last):
    TypeError: a must be an integer

function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     

::

    >>> add_integer(3, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
